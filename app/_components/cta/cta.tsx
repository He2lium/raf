'use client'

import {useState} from 'react';
import styles from './cta.module.css';
import {useForm} from "react-hook-form";
import {FeedbackDto} from "@/app/_types/feedback.types";
import toast from "react-hot-toast";
import {sendFeedback} from "@/app/_actions/sendFeedback";
import {InvisibleSmartCaptcha} from "@/app/_components";
import {MotionImage} from "@/app/_components/motion-image/motion-image";

export const Cta = () => {
    const [visible, setVisible] = useState(false)
    const [key, setKey] = useState(Math.random() * 10000)
    const {
        register,
        handleSubmit,
        reset,
        getValues,
        formState: {isSubmitting},
    } = useForm<FeedbackDto>()

    const onSubmit = () => {
        setVisible(true)
    }

    const onCaptchaSuccess = async (token: string) => {
        const data = getValues()

        try {
            await sendFeedback({...data, _captcha: token})
            toast.success('Запрос успешно отправлен!')
            reset()
        } catch {
            toast.error('Произошла ошибка. Попробуйте еще раз')
        }
        setKey((prev) => prev + 1)
        setVisible(false)
    }

    const loading = isSubmitting || visible

    return (
        <section className='container'>
            <div className={styles['cta']}>
                <div className={styles['col']}>
                    <h2 className={`title-1 ${styles['cta-title']}`}>Есть вопросы?</h2>
                    <h3 className={`${styles['cta-subtitle']} title-3`}>
                        Подробно Вас проконсультируем
                    </h3>
                    <div className={styles['cta-btns']}>
                        <a
                            href='#'
                            className={`${styles['cta-btn']} ${styles['cta-btn--wa']}`}
                        >
                            <svg
                                width='36'
                                height='36'
                                viewBox='0 0 36 36'
                                fill='none'
                                xmlns='http://www.w3.org/2000/svg'
                            >
                                <path
                                    d='M11.4937 27.7983L12.5449 28.4113C14.301 29.4353 16.2968 29.9821 18.3795 29.9821C24.7881 29.9821 29.9831 24.7871 29.9831 18.3785C29.9831 11.97 24.7881 6.77492 18.3795 6.77492C11.971 6.77492 6.7759 11.97 6.7759 18.3785C6.7759 20.4618 7.32305 22.4584 8.34773 24.2148L8.96037 25.265L8.36006 27.4711C8.20636 28.036 8.72475 28.554 9.28951 28.3999L11.4937 27.7983ZM5.15808 32.5345C4.59332 32.6886 4.07491 32.1706 4.22862 31.6057L5.84201 25.6765C4.59146 23.5328 3.875 21.0394 3.875 18.3785C3.875 10.3679 10.3689 3.87402 18.3795 3.87402C26.3901 3.87402 32.884 10.3679 32.884 18.3785C32.884 26.3891 26.3901 32.883 18.3795 32.883C15.7196 32.883 13.2268 32.1671 11.0836 30.9172L5.15808 32.5345ZM13.1453 11.5735C13.3395 11.5598 13.5343 11.5578 13.7288 11.5672C13.8074 11.5724 13.8855 11.5815 13.9638 11.5905C14.1948 11.6172 14.4488 11.7579 14.5342 11.9515C14.9669 12.9326 15.3867 13.9193 15.7937 14.9114C15.8835 15.1304 15.8294 15.4143 15.6585 15.689C15.5718 15.8298 15.4355 16.0273 15.2777 16.2294C15.1137 16.4393 14.7606 16.8252 14.7606 16.8252C14.7606 16.8252 14.6176 16.9967 14.6715 17.21C14.6925 17.2907 14.7595 17.4082 14.8202 17.507C14.8539 17.5616 14.8851 17.6105 14.9054 17.6443C15.2766 18.2641 15.7755 18.8924 16.385 19.4832C16.5597 19.6525 16.7291 19.8252 16.9112 19.9856C17.5905 20.5845 18.3589 21.0739 19.1889 21.4364L19.1963 21.4397C19.3188 21.4925 19.3818 21.5214 19.5612 21.5975C19.6517 21.6358 19.7443 21.6689 19.8393 21.694C19.8736 21.703 19.9089 21.708 19.9443 21.7105C20.1788 21.7246 20.3144 21.5742 20.3723 21.505C21.4217 20.2337 21.5177 20.1507 21.525 20.1513V20.1536C21.6629 20.0083 21.8798 19.9578 22.0732 19.9697C22.1616 19.975 22.2495 19.992 22.3298 20.0287C23.1012 20.3806 24.3623 20.9294 24.3623 20.9294L25.2058 21.3086C25.3471 21.3768 25.476 21.5373 25.4822 21.6934C25.486 21.7904 25.4965 21.9471 25.4618 22.2337C25.4164 22.6089 25.3022 23.0607 25.1888 23.2974C25.109 23.4635 25.0058 23.6109 24.8857 23.7356C24.7228 23.9047 24.6018 24.0074 24.406 24.1534C24.2868 24.2421 24.225 24.2839 24.225 24.2839C24.0235 24.4109 23.91 24.4745 23.6699 24.6023C23.2966 24.8011 22.8841 24.9154 22.4615 24.9372C22.1922 24.951 21.9236 24.9704 21.6545 24.9559C21.6426 24.9552 20.8304 24.8304 20.8304 24.8304C18.768 24.288 16.8606 23.2718 15.2601 21.8625C14.9329 21.5745 14.6294 21.2627 14.3196 20.9544C13.0301 19.6706 12.0539 18.2863 11.4619 16.9768C11.17 16.3311 10.9851 15.6395 10.9822 14.9279C10.9769 14.0476 11.2651 13.1906 11.8013 12.4924C11.907 12.3548 12.0073 12.212 12.1804 12.0486C12.3638 11.8754 12.4804 11.7825 12.6061 11.7182C12.7736 11.6325 12.9576 11.5867 13.1453 11.5735Z'
                                    fill='currentColor'
                                />
                            </svg>
                        </a>
                        <a
                            href='#'
                            className={`${styles['cta-btn']} ${styles['cta-btn--tg']}`}
                        >
                            <svg
                                width='36'
                                height='36'
                                viewBox='0 0 36 36'
                                fill='none'
                                xmlns='http://www.w3.org/2000/svg'
                            >
                                <path
                                    d='M25.7674 11.3385C26.6276 11.0264 27.0546 10.9141 27.2912 10.8739C27.2929 10.9495 27.2912 11.0109 27.2873 11.0511C26.9499 14.5959 25.4719 23.3169 24.7127 27.375C24.5351 28.3253 24.3987 28.7777 23.4809 28.2386C22.8768 27.8835 22.3301 27.4368 21.7444 27.0528C19.8231 25.7933 17.0729 23.9175 17.2988 24.0304C15.4073 22.7839 16.199 22.0206 17.255 21.0027C17.426 20.8379 17.6038 20.6665 17.7783 20.4852C17.8562 20.4043 18.2372 20.0499 18.7745 19.5505C20.4977 17.9484 23.8278 14.8524 23.9119 14.4941C23.9257 14.4354 23.9385 14.2163 23.8082 14.1006C23.6781 13.9849 23.4861 14.0244 23.3474 14.0559C23.1509 14.1005 20.0211 16.1692 13.958 20.262C13.0696 20.872 12.2649 21.1694 11.544 21.1537L11.5504 21.1569C10.6007 20.822 9.65373 20.5336 8.70173 20.2437C8.07631 20.0531 7.44874 19.8619 6.81685 19.6565C6.66231 19.6064 6.51152 19.5586 6.36981 19.5141C12.936 16.6537 17.3094 14.7703 19.5008 13.8588C22.6839 12.5349 24.5719 11.7723 25.7674 11.3385ZM29.2812 8.54154C28.9137 8.2433 28.5097 8.10642 28.2291 8.03938C27.9393 7.97015 27.6638 7.94787 27.455 7.95156C26.764 7.96373 26.0218 8.16025 24.7779 8.61161C23.509 9.07206 21.5592 9.86083 18.3867 11.1803C16.1502 12.1106 11.6974 14.0287 5.03948 16.9294C4.45468 17.1632 3.91859 17.4285 3.49503 17.743C3.10392 18.0335 2.55643 18.5532 2.45628 19.3522C2.38062 19.9556 2.55656 20.5126 2.91337 20.9512C3.224 21.333 3.62196 21.5649 3.92502 21.7117C4.37489 21.9295 4.98018 22.1193 5.51214 22.2861C6.34343 22.5466 7.17279 22.8127 8.00586 23.0677C10.5849 23.8572 12.708 24.507 15.044 26.0464C16.7575 27.1755 18.4378 28.3539 20.1541 29.4789C20.7801 29.8892 21.3652 30.3601 22.0116 30.7397C22.7175 31.1546 23.615 31.5328 24.7075 31.4322C26.3586 31.2803 27.2175 29.7614 27.5642 27.9083C28.3215 23.8605 29.8237 15.0185 30.1751 11.3259C30.221 10.844 30.1673 10.3038 30.1226 10.0429C30.0767 9.77434 29.9361 9.07302 29.2812 8.54154Z'
                                    fill='currentColor'
                                />
                            </svg>
                        </a>
                    </div>
                    <div className={styles['image-wrapper']}>
                        <MotionImage
                            src='/cta.png'
                            alt='cta'
                            fill
                            animate={{rotate: [5, -5, 5]}}
                            transition={{
                                repeat: Infinity,
                                repeatType: "loop",
                                duration: 2,
                                ease: "easeInOut",
                            }}
                        />
                    </div>
                </div>
                <div className={styles['col']}>
                    <form className={styles['form']} onSubmit={handleSubmit(onSubmit)}>
                        <div className={styles['form-field']}>
                            <input disabled={loading} required type='text' placeholder='Имя' {...register('name', {
                                required: true,
                                minLength: 1,
                                maxLength: 64
                            })}/>
                        </div>
                        <div className={styles['form-field']}>
                            <input disabled={loading} required type='text' placeholder='Номер телефона' {...register('phone', {
                                required: true,
                                minLength: 4,
                                maxLength: 20
                            })}/>
                        </div>
                        <div className={styles['form-action']}>
                            <button disabled={loading} type={'submit'} className={styles['form-btn']}>Задать вопрос</button>
                            <p className={styles['form-policy']}>
                                Нажимая кнопку “Задать вопрос” вы соглашаетесь с политикой
                                конфиденциальности
                            </p>
                        </div>
                    </form>
                </div>
            </div>
            <InvisibleSmartCaptcha
                key={key}
                visible={visible}
                onSuccess={onCaptchaSuccess}
            />
        </section>
    );
};
